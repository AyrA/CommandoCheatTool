<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TtWeapon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="TtWeapon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="CbUzi.ToolTip" xml:space="preserve">
    <value>Fire rate: fast
Bullets per shot: 1
Damage per bullet: 1
Bullet speed: normal
Reload: every 4 shots
Firing while moving: Yes
Reloading while moving: Yes
Special: Gun remembers how many shots until reload even across gun switches and levels.
</value>
  </data>
  <data name="CbLaserPistol.ToolTip" xml:space="preserve">
    <value>Fire rate: normal
Bullets per shot: 4
Damage per bullet: 1
Bullet speed: normal
Reload: No
Firing while moving: Yes
Reloading while moving: N/A
Special: Misleading name. Fires 4 shots that travel only a short distance and tend to drop to the ground.
Because it fires 4 shots you can kill weak enemies when fired point blank at them.

</value>
  </data>
  <data name="CbRifle.ToolTip" xml:space="preserve">
    <value>Fire rate: slow
Bullets per shot: 1
Damage per bullet: 4
Bullet speed: fast
Reload: every shot
Firing while moving: No
Reloading while moving: No
Special: Reload animation cannot be cancelled

</value>
  </data>
  <data name="CbShotgun.ToolTip" xml:space="preserve">
    <value>Fire rate: medium
Bullets per shot: 6
Damage per bullet: 1
Bullet speed: normal
Reload: every shot
Firing while moving: Yes
Reloading while moving: No
Special: Better version of the laser pistol. Shoots 6 instead of 4 bullets, and they fly faster and drop slower. Reloads as soon as the player is stationary.

</value>
  </data>
  <data name="CbMinigun.ToolTip" xml:space="preserve">
    <value>Fire rate: very fast
Bullets per shot: 1
Damage per bullet: 1
Bullet speed: fast
Reload: No
Firing while moving: No
Reloading while moving: No
Special: Can only be fired when stationary. Takes time to rev up and down again.
Because the gun is held low, bullets occasionally hit dead enemies.</value>
  </data>
  <data name="CbMachinegun.ToolTip" xml:space="preserve">
    <value>Fire rate: fast
Bullets per shot: 1
Damage per bullet: 1
Bullet speed: normal
Reload: No
Firing while moving: Yes
Reloading while moving: N/A
Special: Will not hinder movement in any way. Arguably the best bullet firing weapon in the game.</value>
  </data>
  <data name="CbGaussRifle.ToolTip" xml:space="preserve">
    <value>Fire rate: slow
Bullets per shot: 1
Damage per bullet: 1+
Bullet speed: normal
Reload: No
Firing while moving: Yes
Reloading while moving: N/A
Special: Shoots grenades (weaker than regular grenades).
The shots are very bouncy and it's easy to kill yourself.
Great to clear out enemies behind obstacles.</value>
  </data>
  <data name="CbRocketLauncher.ToolTip" xml:space="preserve">
    <value>Fire rate: very slow
Bullets per shot: 1
Damage per bullet: 1+
Bullet speed: normal
Reload: No
Firing while moving: Limited
Reloading while moving: N/A
Special: Rockets have limited range (approximately to the screen edge)
In the jungle and desert levels it is bugged and fires twice as fast.
Can only be fired when the player feet touch the ground.
Jumping immediately when firing (by holding the jump key) will fire a bit higher up. This shot can clear some obstacles.</value>
  </data>
</root>